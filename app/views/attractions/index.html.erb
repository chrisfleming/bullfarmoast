<div id="leftcontent">
  <p>Please select the place you want more information on, either on the map or from the list below.</p>
  <div id="MapSideBar">
    <div id="SideBarGardens">
        Gardens [<a href="javascript:void(0)" onclick="HideLocationList(0)">-</a>]
    </div>
    <div style="overflow:auto;">
        <ul id="GardenList">
        </ul>
    </div>
    
     <div id="SideBarCastle">
        Castles and Houses [<a href="javascript:void(0)" onclick="HideLocationList(1)">-</a>]
    </div>
    <div style="overflow:auto;">
        <ul id="CastleList">
        </ul>
    </div>
    <div id="SideBarPlaces">
        Places [<a href="javascript:void(0)" onclick="HideLocationList(2)">-</a>]
    </div>
    <div style="overflow:auto;">
          <ul id="PlacesList">
        </ul>
    </div>
    <div id="SideBarOther">
        Other [<a href="javascript:void(0)" onclick="HideLocationList(3)">-</a>]
    </div>
    <div style="overflow:auto;">
        <ul id="OtherList">
        </ul>
    </div>
    
    
   
</div>
</div>
<div id="centercontent">
  <div id="map" style="border:1px; width:100%;  height:500px;">
  </div>
</div>
<br />

<script type="text/javascript">
//<![CDATA[
var map;
var ajaxRequest;
var plotlist;
var plotlayers=[];

//set up array of locations
//var aLocations = new Array;
var usePDMarker = false;
var aCats = new Array;

// Setup Category's
aCats[0] = new Array("garden", "SideBarGardens", "GardenList", "Gardens");
aCats[1] = new Array("building", "SideBarCastle", "CastleList", "Castles and Houses");
aCats[2] = new Array("places", "SideBarPlaces", "PlacesList", "Places");
aCats[3] = new Array("other", "SideBarOther", "OtherList", "Other"); 


// Storage for sidebar list
var listNodeContent = new Array; 

function openPopup( i ) {
	plotlayers[i].openPopup();
}

function getXmlHttpObject() {
	if (window.XMLHttpRequest) { return new XMLHttpRequest(); }
	if (window.ActiveXObject)  { return new ActiveXObject("Microsoft.XMLHTTP"); }
	return null;
}

function stateChanged( response ) {
	
	//var marker = new Array;
	var iconImg = new Array;
	var icon = new Array;
	
	var MyIcon = L.Icon.extend({
      iconUrl: '/assets/images/marker.png',
      shadowUrl: '/assets/images/marker-shadow.png',
      iconSize: new L.Point(32, 37),
      shadowSize: new L.Point(51, 37)
      
    });

    // Define a set of icons for each category
    
    // Garden
    iconImg['garden'] = L.Icon.extend({
      iconUrl: '/assets/mapicons/6ec65b_classic/wetlands.png',
      shadowUrl: '/assets/mapicons/shadow.png',
      iconSize: new L.Point(32, 37),
      shadowSize: new L.Point(51, 37)
     // ,iconAnchor: new L.Point(25, 18)
     // ,popupAnchor: new L.Point(0, 0)
    });
    icon['garden'] = new iconImg['garden'];

    iconImg['building'] = L.Icon.extend({
      iconUrl: '/assets/mapicons/6ec65b_classic/tower.png',
      shadowUrl: '/assets/mapicons/shadow.png',
      iconSize: new L.Point(32, 37),
      shadowSize: new L.Point(51, 37)
    });
    icon['building'] = new iconImg['building'];
    
    iconImg['places'] = L.Icon.extend({
      iconUrl: '/assets/mapicons/6ec65b_classic/smallcity.png',
      shadowUrl: '/assets/mapicons/shadow.png',
      iconSize: new L.Point(32, 37),
      shadowSize: new L.Point(51, 37)
    });
    icon['places'] = new iconImg['places'];
    
    iconImg['other'] = L.Icon.extend({
      iconUrl: '/assets/mapicons/6ec65b_classic/you-are-here-2.png',
      shadowUrl: '/assets/mapicons/shadow.png',
      iconSize: new L.Point(32, 37),
      shadowSize: new L.Point(51, 37)
    });
    icon['other'] = new iconImg['other'];

	
	// if AJAX returned a list of markers, add them to the map
	//if (ajaxRequest.readyState==4) {i
		//use the info here that was returned
		//if (ajaxRequest.status==200  ) {
			//plotlist=eval("(" + ajaxRequest.responseText + ")");
		

			plotlist = response;
			removeMarkers();
			
			for (i=0;i<plotlist.length;i++) {
				// latlong  = POINT (51.1156 -0.5823)
				
				latlong = /(-*\d+\.\d+)\s+(-*\d+\.\d+)/.exec( plotlist[i].latlong )
				
				if (latlong==null) {
					alert ("latlong is null for "+ i + ": " + plotlist[i].name + " ll: " + plotlist[i].latlong );
				}	
				else {
				var plotll = new L.LatLng( latlong[1], latlong[2], true);
				var plotmark = new L.Marker(plotll, {icon: icon[plotlist[i].category] });
				plotmark.data=plotlist[i];
				map.addLayer(plotmark);
				plotmark.bindPopup("<h3><a href=\"/attractions/"+ plotlist[i].name.replace(/ /g, '_') +"\">  "+plotlist[i].name+"</a></h3>"+plotlist[i].description);
				plotlayers.push(plotmark);
				}
			}
		//}
	//}
	createSideBar( plotlist );
}

/* Side Bar */
// Creates a locations list and put it into side bar
function createSideBar( plotlist ) {
//var oUL = document.createElement("ul");
// write links into document.
	for (var j=0; j<aCats.length; j++) {
		for (var i=0; i<plotlist.length; i++) {
			if (plotlist[i].category == aCats[j][0]) {
				var linkElem = document.createElement("a");
				var listElem = document.createElement("li");
				linkElem.innerHTML = plotlist[i].name;
				linkElem.href = "javascript:void(0)";
				linkElem.href = "javascript:openPopup(" + i +")";
				//linkElem.click = "javascript:openPopup(" + i +")";
				
				var listNode = document.getElementById(aCats[j][2]).appendChild(listElem);
				listNode.appendChild(linkElem);
				// oUL.appendChild(listElem);
			}
		}
	}
//document.getElementById("LocationList").appendChild(oUL);
}


// Function is called to hide location list
function HideLocationList(j)
{
  $('#' + aCats[j][2]).hide(3);
  document.getElementById(aCats[j][1]).innerHTML = aCats[j][3] +' [<a href="#" onclick="ShowLocationList(' + j + ')">+</a>]';
}
// Function is called to show location list
function ShowLocationList(j)
{
  $('#' + aCats[j][2] ).show(3);
  document.getElementById(aCats[j][1]).innerHTML = aCats[j][3] + ' [<a href="#" onclick="HideLocationList(' + j + ')">-</a>]';
}
// Function is called to show/hide location list
var LocationListVisible = true;
function ProcessLocationList()
{
if (LocationListVisible)
{
// Hide sidebar
document.getElementById("LocationList").style.display="none";
document.getElementById("SideBarActionLink").innerHTML = "+";
}
else
{
// Show sidebar
document.getElementById("LocationList").style.display="block";
document.getElementById("SideBarActionLink").innerHTML = "-";
}
LocationListVisible = !LocationListVisible;
}
/* EOF Side Bar */ 


function removeMarkers() {
	for (i=0;i<plotlayers.length;i++) {
		map.removeLayer(plotlayers[i]);
	}
	plotlayers=[];
}

function askForPlots() {
	// request the marker info with AJAX for the current bounds
	//var bounds=map.getBounds();
	//var minll=bounds.getSouthWest();
	//var maxll=bounds.getNorthEast();
	var msg='/attractions.json';
	ajaxRequest.onreadystatechange = stateChanged();
	ajaxRequest.open('GET', msg, true);
	ajaxRequest.send(null);
}

function initmap() {
	// set up the map
	map = new L.Map('map');

	// create the tile layer with correct attribution
	var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
	var osmAttrib='Map data Â© OpenStreetMap contributors';
	var osm = new L.TileLayer(osmUrl, {minZoom: 8, maxZoom: 18, attribution: osmAttrib});		

	// start the map in South-East England
	map.setView(new L.LatLng(51.104, 0.5105),11);
	map.addLayer(osm);
	
	//askForPlots();
	//map.on('moveend', onMapMove);
	
	var BfoIcon = L.Icon.extend({
      iconUrl: '/assets/mapicons/cowl_blue.png',
      shadowUrl: '/assets/mapicons/shadow.png',
      iconSize: new L.Point(32, 37),
      shadowSize: new L.Point(51, 37)
    });
    
    var bfo_icon = new BfoIcon;
    var bfo = new L.Popup();
    
    var bfoMarker = new L.Marker(new L.LatLng(51.0843672, 0.5094063), {icon: bfo_icon});
    
    map.addLayer(bfoMarker);
    
    //bfo.setLatLng(new L.LatLng(51.084, 0.5095));
    //bfo.setContent("This is Bull Farm Oast");
    
    //map.openPopup(bfo);


}

function onMapMove(e) { askForPlots(); }

// Setup Map
$(document).ready(
	initmap()
);

// Get List of Places
$.ajax({
  url: "/attractions.json",
  context: document.body,
  success: function(response){
    stateChanged(response);
  }
});
	
//]]>
</script>
